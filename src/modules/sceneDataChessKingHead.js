const meshPoints = [
    -0.152493, 9.028288, -0.148813,
    -0.249486, 8.948933, -0.243465,
    -0.002603, 9.028288, -0.213056,
    -0.004259, 8.948933, -0.348570,
    0.148812, 9.028288, -0.152494,
    0.243464, 8.948933, -0.249488,
    0.213055, 9.028288, -0.002604,
    0.348568, 8.948933, -0.004260,
    0.213055, 9.302430, -0.002605,
    0.152493, 9.028288, 0.148811,
    0.249486, 8.948933, 0.243463,
    0.002603, 9.028288, 0.213053,
    0.004259, 8.948933, 0.348567,
    -0.148812, 9.028288, 0.152492,
    -0.243464, 8.948933, 0.249485,
    -0.213054, 9.028288, 0.002602,
    -0.348568, 8.948933, 0.004258,
    -0.011110, 7.466897, -0.909412,
    0.627217, 7.466897, -0.654099,
    0.898049, 7.466897, -0.022200,
    0.642736, 7.466897, 0.616127,
    0.010837, 7.466897, 0.886959,
    -0.627490, 7.466897, 0.631646,
    -0.898322, 7.466897, -0.000252,
    -0.643009, 7.466897, -0.638580,
    -0.014489, 8.583366, -1.185936,
    -0.848827, 8.583366, -0.828338,
    0.828338, 8.583366, -0.848829,
    1.185936, 8.583366, -0.014490,
    0.848829, 8.583366, 0.828336,
    0.014490, 8.583366, 1.185934,
    -0.828336, 8.583366, 0.848827,
    -1.185934, 8.583366, 0.014488,
    -0.014489, 8.583366, -1.185936,
    -0.848827, 8.583366, -0.828338,
    0.828338, 8.583366, -0.848829,
    1.185936, 8.583366, -0.014490,
    0.848829, 8.583366, 0.828336,
    0.014490, 8.583366, 1.185934,
    -0.828336, 8.583366, 0.848827,
    -1.185934, 8.583366, 0.014488,
    0.002678, 8.875105, 0.219200,
    -0.153105, 8.875105, 0.156892,
    0.156893, 8.875105, 0.153104,
    -0.219201, 8.875105, 0.002677,
    0.219202, 8.875105, -0.002679,
    -0.156893, 8.875105, -0.153106,
    0.153105, 8.875105, -0.156894,
    -0.002678, 8.875105, -0.219203,
    -0.002603, 9.850716, -0.213057,
    -0.152493, 9.850716, -0.148814,
    0.148812, 9.850716, -0.152495,
    0.213055, 9.850716, -0.002605,
    0.000000, 9.975286, -0.000002,
    0.152493, 9.850716, 0.148810,
    0.002603, 9.850716, 0.213053,
    -0.148812, 9.850716, 0.152491,
    -0.213054, 9.850716, 0.002601,
    0.213055, 9.576573, -0.002605,
    -0.213054, 9.302430, 0.002601,
    -0.213054, 9.576573, 0.002601,
    0.148812, 9.576572, -0.152495,
    0.148812, 9.302430, -0.152495,
    -0.148812, 9.576572, 0.152491,
    -0.148812, 9.302430, 0.152491,
    -0.002603, 9.576572, -0.213057,
    -0.002603, 9.302430, -0.213057,
    -0.152493, 9.302430, -0.148814,
    -0.152493, 9.576573, -0.148814,
    0.002603, 9.576572, 0.213052,
    0.002603, 9.302430, 0.213052,
    0.152493, 9.302430, 0.148810,
    0.152493, 9.576573, 0.148810,
    0.213055, 9.302430, -0.002605,
    0.213055, 9.576573, -0.002605,
    -0.213054, 9.302430, 0.002601,
    -0.213054, 9.576573, 0.002601,
    0.148812, 9.576572, -0.152495,
    0.148812, 9.302430, -0.152495,
    -0.148812, 9.576572, 0.152491,
    -0.148812, 9.302430, 0.152491,
    0.419512, 9.153886, -0.091092,
    0.419512, 9.725119, -0.091093,
    -0.419512, 9.153886, 0.091090,
    -0.419512, 9.725119, 0.091089,
    0.355269, 9.725118, -0.240983,
    0.355269, 9.153884, -0.240982,
    -0.355269, 9.725118, 0.240979,
    -0.355269, 9.153884, 0.240980,
].map((pointData, index) => {
    if (index % 3 === 0) return pointData+2;
    if (index % 3 === 1) {
        return -1 * (pointData - 9);
    }
    if (index % 3 === 2) {
        return 30;
    }
});
const v3Points = Array(meshPoints.length/3)
    .fill(null)
    .map((_,index)=>{
        return meshPoints.slice(index*3,index*3+3)
    });

const meshTrianglesData = [
    /*0, 4, 5,
    0, 3, 5,
    0, 1, 2,
    3, 0, 2,
    4, 5, 6,
    5, 6, 7,
    7, 3, 2,
    7, 3, 5,
    6, 4, 0,
    6, 0, 1*/


    17, 1, 2,
    59, 52, 53,
    61, 57, 58,
    1, 4, 2,
    59, 55, 73,
    3, 6, 4,
    5, 8, 6,
    61, 51, 69,
    8, 10, 11,
    66, 52, 62,
    10, 13, 11,
    64, 56, 57,
    12, 15, 13,
    69, 50, 66,
    14, 17, 15,
    73, 56, 70,
    25, 26, 18,
    24, 27, 25,
    28, 20, 19,
    29, 21, 20,
    30, 22, 21,
    22, 32, 23,
    23, 33, 24,
    26, 19, 18,
    32, 39, 40,
    30, 37, 38,
    28, 34, 36,
    33, 40, 41,
    31, 38, 39,
    29, 36, 37,
    26, 35, 34,
    27, 41, 35,
    43, 39, 42,
    49, 36, 34,
    44, 39, 38,
    47, 41, 45,
    45, 15, 17,
    49, 6, 48,
    46, 36, 48,
    44, 13, 42,
    46, 38, 37,
    44, 8, 11,
    43, 41, 40,
    43, 13, 15,
    48, 8, 46,
    47, 17, 2,
    49, 2, 4,
    49, 35, 47,
    58, 54, 51,
    51, 54, 50,
    50, 54, 52,
    52, 54, 53,
    53, 54, 55,
    55, 54, 56,
    56, 54, 57,
    57, 54, 58,
    10, 71, 12,
    72, 70, 71,
    1, 67, 3,
    68, 66, 67,
    12, 65, 14,
    71, 64, 65,
    3, 63, 5,
    67, 62, 63,
    16, 68, 1,
    60, 69, 68,
    7, 72, 10,
    9, 73, 72,
    14, 60, 16,
    64, 77, 80,
    5, 9, 7,
    62, 75, 78,
    77, 84, 85,
    81, 88, 89,
    65, 80, 81,
    63, 78, 79,
    61, 76, 77,
    59, 74, 75,
    9, 79, 74,
    60, 81, 76,
    84, 88, 85,
    82, 86, 83,
    79, 82, 74,
    81, 84, 76,
    79, 86, 87,
    75, 82, 83,
    75, 86, 78,
    77, 88, 80,
    17, 16, 1,
    59, 62, 52,
    61, 64, 57,
    1, 3, 4,
    59, 53, 55,
    3, 5, 6,
    5, 7, 8,
    61, 58, 51,
    8, 7, 10,
    66, 50, 52,
    10, 12, 13,
    64, 70, 56,
    12, 14, 15,
    69, 51, 50,
    14, 16, 17,
    73, 55, 56,
    25, 27, 26,
    24, 33, 27,
    28, 29, 20,
    29, 30, 21,
    30, 31, 22,
    22, 31, 32,
    23, 32, 33,
    26, 28, 19,
    32, 31, 39,
    30, 29, 37,
    28, 26, 34,
    33, 32, 40,
    31, 30, 38,
    29, 28, 36,
    26, 27, 35,
    27, 33, 41,
    43, 40, 39,
    49, 48, 36,
    44, 42, 39,
    47, 35, 41,
    45, 43, 15,
    49, 4, 6,
    46, 37, 36,
    44, 11, 13,
    46, 44, 38,
    44, 46, 8,
    43, 45, 41,
    43, 42, 13,
    48, 6, 8,
    47, 45, 17,
    49, 47, 2,
    49, 34, 35,
    10, 72, 71,
    72, 73, 70,
    1, 68, 67,
    68, 69, 66,
    12, 71, 65,
    71, 70, 64,
    3, 67, 63,
    67, 66, 62,
    16, 60, 68,
    60, 61, 69,
    7, 9, 72,
    9, 59, 73,
    14, 65, 60,
    64, 61, 77,
    5, 63, 9,
    62, 59, 75,
    77, 76, 84,
    81, 80, 88,
    65, 64, 80,
    63, 62, 78,
    61, 60, 76,
    59, 9, 74,
    9, 63, 79,
    60, 65, 81,
    84, 89, 88,
    82, 87, 86,
    79, 87, 82,
    81, 89, 84,
    79, 78, 86,
    75, 74, 82,
    75, 83, 86,
    77, 85, 88,
].map((data)=>data-1);

//Массив в котором треугольники перечислены просто последовательно по 3 точки
const trianglesPoints = Array(meshTrianglesData.length/3)
    .fill(null)
    .map((_,index)=>{
        return meshTrianglesData.slice(index*3,index*3+3).map((data)=>{
            return v3Points[data]
        })
    }).flat().flat();

export {trianglesPoints};
//trianglesCount in shader 168